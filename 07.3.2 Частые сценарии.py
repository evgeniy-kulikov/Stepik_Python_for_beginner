""" 07.3.2 Частые сценарии """
# Задача 01:
# На вход программе подаются два целых числа a и b (a ≤ b)
# Напишите программу, которая подсчитывает количество чисел в диапазоне от a до b включительно,
# куб которых оканчивается на 4 или 9
a, b = int(input()), int(input())
count = 0
for i in range(a, b + 1):
    i **= 3
    if i % 10 == 4 or i % 10 == 9:
        count += 1
print(count)

# Другое решение (оказывается можно в кубы не возводить !!!)
count = 0
for i in range(a, b + 1):
    if i % 10 == 4 or i % 10 == 9:
        print(i)
        count += 1
print(count)

# Задача 02:
# На вход программе подается натуральное число n, а затем n целых чисел, каждое на отдельной строке.
# Напишите программу, которая подсчитывает сумму введенных чисел
n = int(input(''))  # задается количество итераций
result = 0
for i in range(n):
    m = int(input())
    result += m
print(result)

# Задача 03:
# Асимптотическое приближение
# На вход программе подается натуральное число n. Напишите программу, которая вычисляет значение выражения
# (1 + 1/2 + 1/3 + ... + 1/n) - log(n)
from math import log
m = 0
n = int(input())
for i in range(n):
    m += 1 / (i + 1)
result = m - log(n)
print(result)

# Задача 04:
# На вход программе подается натуральное число n.
# Напишите программу, которая подсчитывает сумму тех чисел от 1 до n (включительно)
# квадрат которых оканчивается на 2, 5 или 8
n = int(input())
m = 0
for i in range(1, n + 1):
    if pow(i, 2) % 10 == 2 or pow(i, 2) % 10 == 5 or pow(i, 2) % 10 == 2:
        m += i
print(m)

# Задача 06:
# Напишите программу, которая считывает 10 чисел и выводит произведение отличных от нуля чисел
result = 1
for i in range(10):
    m = int(input())
    if m != 0:
        result *= m  # result = result * m
print(result)

# Задача 07:
# Сумма делителей
# На вход программе подается натуральное число n.
# Напишите программу, которая вычисляет сумму всех его делителей
m = int(input())
result = 0
for i in range(1, m + 1):
    if m % i == 0:
        result += i
print(result)

# Задача 08:
# Знакочередующаяся сумма
# На вход программе подается натуральное число n.
# Напишите программу вычисления знакочередующей суммы
# Последовательность организуется в виде:  1 - 2 + 3 - 4 + 5 - 6 . . . + ((-1) ** (n + 1)) * n
# где (-1) ** (n + 1) формирует чередование знака
m = int(input())
result = 0
for i in range(1, m + 1):
    result += ((-1) ** (i + 1)) * i
print(result)

# Задача 09:
# Наибольшие числа
# На вход программе подается натуральное число n, а затем n различных натуральных чисел, каждое на отдельной строке
# Напишите программу, которая выводит наибольшее и второе наибольшее число последовательности
# input:  На вход программе подаются натуральное число n ≥ 2, а затем n различных натуральных чисел,
# каждое на отдельной строке.

m = int(input())
num_1 = 0
num_2 = 0
for i in range(m):
    n = int(input())
    if n > num_1:
        num_1, num_2 = n, num_1
    elif n > num_2:
        num_2 = n
print(num_1, num_2, sep='\n')

# Чужое решение
n = int(input())
s = []
for i in range(n):
    d = int(input())
    s.append(d)
s.sort()
print(s[-1], s[-2], sep='\n')

# Задача 10:
# Only even numbers
# Напишите программу, которая считывает последовательность из 10 целых чисел
# и определяет является ли каждое из них четным или нет.
# input:  На вход программе подаются 10 целых чисел, каждое на отдельной строке
counter = 0
for i in range(10):
    num = int(input())
    if num % 2 == 0:
        counter += 1
if counter == 10:
    print('YES')
else:
    print('NO')

# Чужое решение
flag = True
for i in range(10):
    num = int(input())
    if num % 2 != 0:
        flag = False

if flag:
    print('YES')
else:
    print('NO')

# Задача 11:
# Последовательность Фибоначчи
# На вход программе подается одно число n, (n≤100) – количество членов последовательности
# Последовательность Фибоначчи – это последовательность натуральных чисел,
# где каждое последующее число является суммой двух предыдущих: 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,...
# Программа должна вывести члены последовательности Фибоначчи, отделенные символом пробела

n = int(input(''))
list_fib = [1, 1]
n_real = None
for i in range(2, n):
    n_real = list_fib[(-2 + i)] + list_fib[(-1 + i)]
    list_fib.append(n_real)
result = ' '.join(str(e) for e in list_fib)
if n == 1:
    print(1)
else:
    print(result)

# Чужое решение
n = int(input())
a, b = 1, 1

for i in range(n):
    print(a, end=' ')
    a, b = b, a + b
