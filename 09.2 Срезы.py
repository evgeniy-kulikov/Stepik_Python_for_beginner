# На вход программе подается одно слово, записанное в нижнем регистре.
# Напишите программу, которая определяет: является ли оно палиндромом (зеркальным)?
s = input()
print(('NO', 'YES')[s == s[::-1]])


# На вход программе подается одна строка. Напишите программу, которая выводит:
s = input()
q_1 = len(s)  # общее количество символов в строке
q_2 = s * 3  # исходную строку, повторенную 3 раза
q_3 = s[0]  # первый символ строки
q_4 = s[0:3]  # первые три символа строки
q_5 = s[-3:]  # последние три символа строки
q_6 = s[::-1]  # строку в обратном порядке
q_7 = s[1:-1]  # строку с удаленным первым и последним символом
print(q_1, q_2, q_3, q_4, q_5, q_6, q_7, sep='\n')


# На вход программе подается одна строка. Напишите программу, которая выводит:
s = input()
q_1 = s[2:3]  # третий символ строки
q_2 = s[-2:-1]  # предпоследний символ строки
q_3 = s[0:5]  # первые пять символов строки
q_4 = s[0:-2]  # всю строку, кроме последних двух символов
q_5 = s[::2]  # все символы с четными индексами
q_6 = s[1::2]  # все символы с нечетными индексами
q_7 = s[::-1]  # все символы в обратном порядке
q_8 = s[::-1][::2]  # все символы строки через один в обратном порядке, начиная с последнего
print(q_1, q_2, q_3, q_4, q_5, q_6, q_7, q_8, sep='\n')

# На вход программе подается строка текста.
# Напишите программу, которая разрежет ее на две равные части, и переставит их местами
# Примечание. Если длина строки нечетная, то длина первой части должна быть на один символ больше.
s = input()
if len(s) % 2 == 0:
    q = s[int(len(s) / 2):] + s[: int(len(s) / 2)]
    print(q)
else:
    q = s[int((len(s) + 1) / 2):] + s[: int((len(s) + 1) / 2)]
    print(q)


# Другие варианты

s = input()
cut = - (len(s) // -2)
print(s[cut:] + s[:cut])
# -1 // -2  >>>  0
# 0 // -2  >>>  0
# 1 // -2  >>>  -1
#  2 // -2  >>>  -1
#  3 // -2  >>>  -2
# 4 // -2  >>>  -2
# 5 // -2  >>>  -3
