# 12 Экзамен
""""""

"""
На вход программе подается четное число  n,  n ≥ 2. 
Напишите программу, которая выводит список четных чисел
[2, 4, 6, ..., n]
Input:  4
Output: [2, 4]
"""
n = int(input())
lst = [ el for el in range(2, n + 1) if el % 2 == 0]
print(lst)



"""
На вход программе подаются две строки текста, содержащие целые числа. 
Из данных строк формируются списки чисел L и M. 
Напишите программу, которая создает третий список, 
элементами которого являются суммы соответствующих элементов списков L и M. 
Далее программа должна вывести каждый элемент полученного списка на одной строке через 1 пробел.

На вход программе подаются две строки текста, содержащие целые числа, разделенные символом пробела.
Примечание. Количество чисел в обеих строках одинаковое.
Input:  3 1 4
        1 5 9
Output: 4 6 13
"""
l = list(map(int, input().split()))
m = list(map(int, input().split()))
rez = []
for el in range(len(l)):
    rez.append(l[el] + m[el])
print(*rez)

# Варианты
l = list(map(int, input().split()))
m = list(map(int, input().split()))
rez = [l[el] + m[el] for el in range(len(l))]
print(*rez)

l = list(map(int, input().split()))
m = list(map(int, input().split()))
rez = [i + j for i, j in zip(l, m)]
print(*rez)


"""
На вход программе подается строка текста, содержащая натуральные числа. 
Напишите программу, которая вставляет между каждым числом знак +, 
а затем вычисляет сумму полученных чисел.
На вход программе подается строка текста, содержащая натуральные числа, разделенные символом пробела.

Input:  2 5 11 33 55
Output: 2+5+11+33+55=106
"""
lst = list(map(str, input().split()))
num = [int(el) for el in lst]
s = "+".join(lst)
print(f"{s}={sum(num)}")


"""
На вход программе подается строка текста. 
Напишите программу, которая определяет является ли введенная строка корректным телефонным номером. 
Строка текста является корректным телефонным номером если она имеет формат:

abc-def-hijk или
7-abc-def-hijk
где a, b, c, d, e, f, h, i, j, k – цифры от 0 до 9.

На вход программе подается строка текста.
Программа должна вывести «YES» если строка является корректным телефонным номером и «NO» в противном случае.

Примечание. Телефонный номер должен содержать только цифры и символ -, 
а количество цифр в каждой группе должны быть правильным.

7-301-447-5820
YES

301-4477-5820
NO
"""
s = input()
if len(s) == 12:
    s_12 = s[:3] + s[4:7] + s[8:]
    sep_12 = s[3] + s[7]
    if sep_12 == "--" and s_12.isdigit():
        print("YES")
    else:
        print("NO")
elif len(s) == 14:
    s_14 = s[0] + s[2:5] + s[6:9] + s[10:]
    sep_14 = s[1] + s[5] + s[9]
    if sep_14 == "---" and s_14.isdigit() and s[0] == '7':
        print("YES")
    else:
        print("NO")
else:
    print("NO")

# Варианты
n = input()
s = n.replace('-', '')
if s.isdigit():
    if '-' in n[3] and '-' in n[7] and len(n) == 12:
        print('YES')
    elif n.startswith('7-') and '-' in n[5] and '-' in n[9] and len(n) == 14:
        print('YES')
    else:
        print('NO')
else:
    print('NO')



"""
На вход программе подается строка текста. 
Напишите программу, использующую списочное выражение, которая находит длину самого длинного слова.

проспал почти всю ночь
7
"""
s = list(map(str, input().split()))
s = [len(el) for el in s]
print(max(s))

# Варианты
print(max([len(el) for el in input().split()]))


"""
На вход программе подается строка текста. 
Напишите программу, использующую списочное выражение, 
которая преобразует каждое слово введенного текста в "молодежный жаргон" по следующему правилу: 
первая буква каждого слова удаляется и ставится в конец слова; 
затем в конец слова добавляется слог "ки".
На вход программе подается строка текста на русском языке.

проспал почти всю ночь
роспалпки очтипки сювки очьнки
"""

s = list(map(str, input().split()))
s = [el[1:] + el[0] + "ки" for el in s]
print(*s)
