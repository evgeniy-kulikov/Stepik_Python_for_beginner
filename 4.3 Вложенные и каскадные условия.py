# 4.3 Вложенные и каскадные условия
# вложенное ветвление: после одной развилки в ходе исполнения программы появляется другая развилка.
# При этом вложенные блоки имеют больший размер отступа (+4 пробела для каждого следующего уровня).
# if условие1:
#     блок кода
# else:
#     if условие2:
#         блок кода
#     else:
#         if условие3:
#             блок кода
#         ...

# Каскадный условный оператор
# if условие1:
#     блок кода
# elif условие2:
#     блок кода
# ...
# else:
#     блок кода
# Заключительный блок else в операторе if-elif-else является необязательным

# Задача 1:
# Гонка по прямой. Два участника "n" и "k" Победит ли "k" ?
n, k = int(input('')), int(input(''))
if n > k:
    print('NO')
elif n < k:
    print('YES')
elif n == k:
    print("Don't know")
# Другое решение
# print('YES' if n < k else 'NO' if n > k else 'Don\'t know')

# Задача 2:
# На вход программе подаются три числа – длины сторон существующего треугольника.
# Программа должна вывести на экран текст – вид треугольника («Равносторонний», «Равнобедренный» или «Разносторонний»).
a, b, c = int(input('')), int(input('')), int(input(''))
if a == b == c:
    print('Равносторонний')
elif a == b or a == c or b == c:
    print('Равнобедренный')
else:
    print('Разносторонний')
# Компактное решение
# a, b, c = int(input()), int(input()), int(input())
# print('Равносторонний' if a == b and b == c else 'Равнобедренный' if a == b or b == c or a == c else 'Разносторонний')

# Задача 3:
# Даны три различных целых числа. Напишите программу, которая находит среднее по величине число.
# Примечание: Средним называется число, которое будет вторым, если три числа отсортировать в порядке возрастания.
# input: На вход программе подаётся три различных целых числа, каждое на отдельной строке.
# output: Программа должна вывести среднее число.
a, b, c = int(input('')), int(input('')), int(input(''))
if (b < a < c) or (c < a < b):
    print(a)
elif (a < b < c) or (c < b < a):
    print(b)
else:
    print(c)
# Другое решение (сортировка списка)
k = list(sorted([a, b, c]))
print(k[1])

# Другое решение ()
k = (a + b + c) - max(a, b, c) - min(a, b, c)
print(k)

# Задача 4:
# Дан порядковый номер месяца (1,2,…, 12). Напишите программу, которая выводит на экран количество дней в этом месяце.
# Принять, что год является невисокосным.
# Примечание: написать программу, так чтобы в ней было не более трех условий
# input: На вход программе подаётся одно целое число – порядковый номер месяца
# output: Программа должна вывести количество дней в этом месяце
m = int(input(''))
a = [1, 3, 5, 7, 8, 10, 12]  # 31 день
b = [4, 6, 9, 11]  # 30 дней
if m == 2:
    print(28)
for i in a:
    if i == m:
        print('31')
for i in b:
    if i == m:
        print('30')

# Другое решение
m = int(input(''))
d = [4, 6, 9, 11]  # 30 дней
if m == 2:
    print('28')
elif m in d:
    print('30')
else:
    print('31')

# Другое решение
m = int(input())
k = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
print(k[m-1])

# Другое решение
m = int(input())
if m == 2:
    print(28)
elif (m < 8 and m % 2 == 0) or (m > 7 and m % 2 != 0):
    print('30')
else:
    print('31')

# Задача 5:
# Напишите программу, определяющую, в какой категории будет выступать данный боксер.
# Легкий вес – до 60 кг;
# Первый полусредний вес – до 64 кг;
# Полусредний вес – до 69 кг.
# output: На вход программе подаётся одно целое число.
# input: Программа должна вывести текст – название весовой категории.
weight = int(input(''))
if weight < 60:
    print('Легкий вес')
elif 60 <= weight < 64:
    print('Первый полусредний вес')
elif 64 <= weight < 69:
    print('Полусредний вес')

# Другое решение
a = int(input())
print('Легкий вес' if a < 60 else 'Первый полусредний вес' if a < 64 else 'Полусредний вес')

# Задача 6:
# Напишите программу, которая считывает с клавиатуры два целых числа и строку. Если эта строка является
# обозначением одной из четырёх математических операций (+, -, *, /), то выведите результат применения
# этой операции к введённым ранее числам, в противном случае выведите «Неверная операция».
# Если пользователь захочет поделить на ноль, выведите текст «На ноль делить нельзя!».
# output: На вход программе подаются два целых числа, каждое на отдельной строке, и строка
# input: Программа должна вывести результат применения операции к введенным числам или соответствующий текст,
# если операция неверная либо если происходит деление на ноль.
a, b, st = int(input('')), int(input('')), input('')
if st == '+':
    print(a + b)
elif st == '-':
    print(a - b)
elif st == '*':
    print(a * b)
elif st == '/' and b != 0:
    print(a / b)
elif st == '/' and b == 0:
    print('На ноль делить нельзя!')
else:
    print('Неверная операция')

# Задача 7:
# Напишите программу, которая считывает названия двух основных цветов для смешивания.
# Если пользователь вводит что-нибудь помимо названий «красный», «синий» или «желтый»,
# то программа должна вывести сообщение об ошибке.
# В противном случае программа должна вывести название вторичного цвета, который получится в результате.
#
# если смешать красный и синий, то получится фиолетовый;
# если смешать красный и желтый, то получится оранжевый;
# если смешать синий и желтый, то получится зеленый.
#
# output: На вход программе подаются две строки, каждая на отдельной строке.
# input: Программа должна вывести полученный цвет смешения либо сообщение «ошибка цвета»,
# если введён был не цвет.
a, b = input(''), input('')
if a == 'красный' and b == 'синий':
    print('фиолетовый')
elif a == 'синий' and b == 'красный':
    print('фиолетовый')
elif a == b == 'красный':
    print('красный')
elif a == b == 'синий':
    print('синий')
elif a == 'красный' and b == 'желтый':
    print('оранжевый')
elif a == 'желтый' and b == 'красный':
    print('оранжевый')
elif a == b == 'красный':
    print('красный')
elif a == b == 'желтый':
    print('желтый')
elif a == 'синий' and b == 'желтый':
    print('зеленый')
elif a == 'желтый' and b == 'синий':
    print('зеленый')
elif a == b == 'синий':
    print('синий')
elif a == b == 'желтый':
    print('желтый')
else:
    print('ошибка цвета')

# Другое решение
a, b = input(), input()
if (a == 'красный' and b == 'синий') or (a == 'синий' and b == 'красный'):
    print('фиолетовый')
elif (a == 'красный' and b == 'желтый') or (a == 'желтый' and b == 'красный'):
    print('оранжевый')
elif (a == 'синий' and b == 'желтый') or (a == 'желтый' and b == 'синий'):
    print('зеленый')
elif a == b and (a == 'красный' or a == 'желтый' or a == 'синий'):
    print(a)
else:
    print('ошибка цвета')

# Другое решение
a, b = input(), input()
color = ['красный', 'синий', 'желтый']
mix_color = ['фиолетовый', 'оранжевый', 'зеленый']
if a in color and b in color:
    if a == b:
        print(a)
    else:
        print(mix_color[color.index(a) + color.index(b) - 1])
else:
    print('ошибка цвета')

# Задача 8:
# Цвета колеса рулетки
# карман 0 зеленый;
# для карманов с 1 по 10 карманы с нечетным номером имеют красный цвет, карманы с четным номером – черный;
# для карманов с 11 по 18 карманы с нечетным номером имеют черный цвет, карманы с четным номером – красный;
# для карманов с 19 по 28 карманы с нечетным номером имеют красный цвет, карманы с четным номером – черный;
# для карманов с 29 по 36 карманы с нечетным номером имеют черный цвет, карманы с четным номером – красный.
# Напишите программу, которая считывает номер кармана и показывает,
# является ли этот карман зеленым, красным или черным.
# Программа должна вывести сообщение об ошибке, если пользователь вводит число,
# которое лежит вне диапазона от 0 до 36.
# output: На вход программе подаётся одно целое число.
# input: Программа должна вывести цвет кармана либо сообщение «ошибка ввода»,
# если введённое число лежит вне диапазона от 0 до 36.
n = int(input(''))
if 0 < n <= 36:
    if (1 <= n <= 10) and n % 2 != 0:
        print('красный')
    elif (1 <= n <= 10) and n % 2 == 0:
        print('черный')
    elif (11 <= n <= 18) and n % 2 != 0:
        print('черный')
    elif (11 <= n <= 18) and n % 2 == 0:
        print('красный')
    elif (19 <= n <= 28) and n % 2 != 0:
        print('красный')
    elif (19 <= n <= 28) and n % 2 == 0:
        print('черный')
    elif (29 <= n <= 36) and n % 2 != 0:
        print('черный')
    elif (29 <= n <= 36) and n % 2 == 0:
        print('красный')
elif n == 0:
    print('зеленый')
else:
    print('ошибка ввода')

# Другое решение
n = int(input(''))
if n > 36 or n < 0:
    print('ошибка ввода')
elif n == 0:
    print('зеленый')
elif (n % 2 != 0 and (1 <= n <= 10 or 19 <= n <= 28)) or (n % 2 == 0 and (11 <= n <= 18 or 29 <= n <= 36)):
    print('красный')
else:
    print('черный')

# Другое решение
n = int(input(''))
color = ["черный", "красный", "зеленый", "ошибка ввода"]
not_even = (10 < n < 19 or 28 < n < 37) * (1 - n % 2)
even = (0 < n < 11 or 18 < n < 28) * (n % 2)
green_error = ((n == 0) * 2 + (n > 36 or n < 0) * 3)
print(color[not_even + even + green_error])

# Задача 9:
# На числовой прямой даны два отрезка: [a_1; ,  b_1] и [a_2; , b_2]
# Пересечением двух отрезков может быть:
# отрезок;
# точка;
# пустое множество.
#
# Напишите программу, которая находит их пересечение.
# output: На вход программе подаются 4 целых числа a_1,  b_1,  a_2,  b_2,  каждое на отдельной строке.
# Гарантируется, что a_1 < b_1, и a_2 < b_2
# input: Программа должна вывести на экран границы отрезка, являющегося пересечением, либо общую точку,
# либо текст «пустое множество»
a_1, b_1, a_2, b_2 = int(input('')), int(input('')), int(input('')), int(input(''))
if a_2 == b_1:
    print(a_2)
elif a_1 == b_2:
    print(a_1)
elif (a_1 < a_2 < b_1) and b_1 < b_2:
    print(a_2, b_1)
elif (a_2 < a_1 < b_2) and b_1 > b_2:
    print(a_1, b_2)
elif a_1 <= a_2 and b_1 >= b_2:
    print(a_2, b_2)
elif a_1 >= a_2 and b_1 <= b_2:
    print(a_1, b_1)
else:
    print('пустое множество')

# Мое решение с использованием множеств
a_1, b_1, a_2, b_2 = int(input('')), int(input('')), int(input('')), int(input(''))
line_1 = set(range(a_1, b_1 + 1))
line_2 = set(range(a_2, b_2 + 1))
union = (line_1 & line_2)
if len(union) > 1:
    print(min(union), max(union))
elif len(union) == 1:
    print(*union)
else:
    print('пустое множество')

# Другое решение
a1, b1, a2, b2 = int(input()), int(input()), int(input()), int(input())
if min(b1, b2) < max(a1, a2):
    print('пустое множество')
elif min(b1, b2) == max(a1, a2):
    print(min(b1, b2))
else:
    print(max(a1, a2), min(b1, b2))

