# 13.3 Локальные и глобальные переменные
""""""
"""
                     * * *   Локальные переменные   * * *
                     
Локальными называются переменные, объявленные внутри функции и доступные только ей самой. 
Программный код за пределами функции к ним доступа не имеет.

Локальные переменные скрыты от других функций, 
поэтому другие функции могут иметь собственные локальные переменные с тем же именем.

Область действия переменной – часть программы, в которой можно к ней обращаться, та функция, где она создана. 
Переменная видима только программному коду в области ее действия. 
Никакая инструкция за пределами функции не может обращаться к такой переменной.

К локальной переменной не может обращаться программный код, 
который появляется внутри функции до того, как переменная была создана.

Область действия параметрической переменной — функция, в которой этот параметр используется. 
К параметрической переменной имеет доступ весь программный код этой функции.

Примечание 1. Параметрическая переменная тоже локальная.
Примечание 2. Память для локальных переменных выделяется на время исполнения данной функции в специальной области, 
называемой стеком. При завершении работы функции память освобождается
"""

"""
                     * * *   Глобальные переменные   * * *
                     
Глобальными называются переменные, объявленные в основной программе и доступные как программе, так и всем ее функциям.

Функция может использовать любые глобальные переменные кроме имеющих те же имена, что и ее локальные переменные. 
Если в функции объявлена локальная переменная с тем же именем, что у одной из глобальных, 
то данная глобальная переменная становится недоступной в этой функции, 
и при указании идентификатора переменной произойдет обращение к локальной переменной функции, 
а не одноименной глобальной.                     
"""
birds = 5000   # глобальная переменная

def print_texas():
    birds = 1000  # локальная переменная
    print('В Техасе обитает', birds, 'птиц.')

def print_california():
    birds = 7000  # локальная переменная
    print('В Калифорнии обитает', birds, 'птиц.')

print_texas()  # В Техасе обитает 1000 птиц.
print_california()  # В Калифорнии обитает 7000 птиц.

"""
Глобальные переменные – зло:
Глобальные переменные затрудняют отладку программы. 
Значение глобальной переменной может быть изменено любой инструкцией в программном файле. 
Если обнаружится, что в глобальной переменной хранится неверное значение, 
то придется отыскать все инструкции, которые к ней обращаются, чтобы определить, откуда поступает плохое значение. 

Функции, использующие глобальные переменные, обычно зависят от этих переменных. 
Если возникнет необходимость применить такую функцию в другой программе, 
скорее всего придется эту функцию перепроектировать, чтобы она не опиралась на глобальную переменную.

Глобальные переменные затрудняют понимание программы. 
Глобальная переменная может быть модифицирована любой инструкцией в программе. 
При необходимости разобраться в какой-то части программы, использующей глобальную переменную, 
придется узнать обо всех других частях программы, обращающихся к этой глобальной переменной
"""

"""
                     * * *   Глобальные константы   * * *

Глобальная константа – глобальное имя, ссылающееся на неизменное значение. 
Поскольку значение глобальной константы не может быть изменено во время исполнения программы     

Если глобальная переменная не объявляется с использованием ключевого слова global внутри функции, 
то присвоенное ей значение невозможно изменить внутри этой функции.   

Математический модуль math  определяет две глобальные переменные, math.pi и math.e, 
которым присвоены математические значения констант π = 3.14159265 и e = 2.71828.   

Ключевое слово global
Если нужно, чтобы инструкция внутри функции присваивала значение глобальной переменной, 
то требуется дополнительный шаг. 
В этом случае, глобальная переменная должна быть объявлена внутри функции.          
"""

def print_texas():
    global birds
    birds = 5000
    print('В Техасе обитает', birds, 'птиц.')

def print_california():
    print('В Калифорнии обитает', birds, 'птиц.')

print_texas()  # В Техасе обитает 5000 птиц.
print_california()  # В Калифорнии обитает 5000 птиц.



x = 5

def add():
    global x
    x = 3
    x = x + 5
    print(x)

add()  # 8
print(x)  # 8
