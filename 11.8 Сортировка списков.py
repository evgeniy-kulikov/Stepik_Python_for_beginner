# 11.8 Сортировка списков

# *     *     *     *     *     *     *     *     *     *     *     *     *     *     *
#                           Сортировка пузырьком
# *     *     *     *     *     *     *     *     *     *     *     *     *     *     *
# программный код реализует алгоритм пузырьковой сортировки:
a = [1, 7, -3, 9, 0, -67, 34, 12, 45, 1000, 6,  8, -2, 99]
n = len(a)

for i in range(n - 1):
    for j in range(n - i - 1):
        if a[j] > a[j + 1]:                  # если порядок элементов пары неправильный
            a[j], a[j + 1] = a[j + 1], a[j]  # меняем элементы пары местами

print('Отсортированный список:', a)

# Оптимизация алгоритма
a = [1, 7, -3, 9, 0, -67, 34, 12, 45, 1000, 6,  8, -2, 99]
# a = [1, 7, -3, 9, 20]
n = len(a)

for i in range(n - 1):
    flag = True
    for j in range(n - i - 1):
        if a[j] > a[j + 1]:                  # если порядок элементов пары неправильный
            a[j], a[j + 1] = a[j + 1], a[j]  # меняем элементы пары местами
            flag = False
    if flag:
        break      # если при очередном проходе не проводилось замен пар, то прерываем цикл
print('Отсортированный список:', a)


# *     *     *     *     *     *     *     *     *     *     *     *     *     *     *
#                           Сортировка выбором
# *     *     *     *     *     *     *     *     *     *     *     *     *     *     *
"""
Отсортируйте список по возрастанию, реализовав алгоритм сортировки выбором.
"""
a = [1, 7, -3, 9, 0, -67, 34, 12, 45, 1000, 6,  8, -2, 99]
# a = [1, 7, -3, 10]
n = len(a)

for i in range(n):
    idx_min = i  # Допускаем, что первый элемент - минимальный. Фиксируем его индекс
    for j in range(i + 1, n):
        if a[j] < a[idx_min]:
            idx_min = j                  # Выбор наименьшего значения
    a[idx_min], a[i] = a[i], a[idx_min]  # Помещаем это перед отсортированным концом массива (левая половина)
print(a)

# сортировка выбором (по убыванию)
a = [1, 7, -3, 10]
n = len(a)

for i in range(n - 1):
    idx_min = n - i - 1  # Допускаем, что последний элемент - минимальный. Фиксируем его индекс
    for j in range(n - i):
        if a[j] < a[idx_min]:
            idx_min = j                      # Выбор наименьшего значения
        a[j], a[idx_min] = a[idx_min], a[j]  # Помещаем это перед отсортированным концом массива (правая половина)
print(a)


# *     *     *     *     *     *     *     *     *     *     *     *     *     *     *
#                           Сортировка простыми вставками
# *     *     *     *     *     *     *     *     *     *     *     *     *     *     *
a = [1, 7, -3, 9, 0, -67, 34, 12, 45, 1000, 6,  8, -2, 99]
n = len(a)
for i in range(1, n): 
    el = a[i]  # первый элемент из неотсортированной части списка
    j = i
    while j >= 1 and a[j - 1] > el: 
        a[j] = a[j - 1]
        j -= 1
    a[j] = el
print('Отсортированный список:', a)
