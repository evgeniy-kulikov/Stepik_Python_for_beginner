# 7.9 Вложенные циклы. Часть 2

# Задача 01
# Численный треугольник 3
# Дано натуральное число n. Напишите программу, которая печатает численный треугольник с высотой равной n
n = int(input())
count = 1
for i in range(1, n + 1):
    print()  # печатаем новую строку
    for m in range(i):
        print(count, end=' ')
        count += 1
# 1
# 2 3
# 4 5 6
# 7 8 9 10
# 11 12 13 14 15
# 16 17 18 19 20 21
# ...


# Задача 02
# Численный треугольник 4
# Дано натуральное число n.
# Напишите программу, которая печатает численный треугольник с высотой равной n.

n = int(input())
for i in range(1, n + 1):
    for m in range(1, i + 1):
        print(m, end='')
    for r in reversed(range(1, i)):
        print(r, end='')
    print()
# 1
# 121
# 12321
# 1234321
# 123454321
# ...
# решение без reversed(range())
n = int(input())
for i in range(1, n + 1):
    for m in range(1, i + 1):
        print(m, end='')
    for r in range(i - 1, 0, -1):
        print(r, end='')
    print()

# Задача 03
# Делители - 1
# На вход программе подается два натуральных числа a и b (a < b).
# Напишите программу, которая находит натуральное число из отрезка [a; b]
# с максимальной суммой делителей.

# Формат входных данных
# На вход программе подаются два числа, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести два числа на одной строке, разделенных пробелом:
# число с максимальной суммой делителей и сумму его делителей.
a, b = int(input()), int(input())

num_max = None  # искомое число
num_sum_div = 0  # сумма делителей искомого числа

for num in range(a, b + 1):
    # сумма делителей каждого числа из диапазона range(a, b + 1)
    sum_list_div = 0

    for k in range(1, num + 1):
        if num % k == 0:
            sum_list_div += k
    if sum_list_div >= num_sum_div:
        num_sum_div = sum_list_div
        num_max = num
print(num_max, num_sum_div)

# Задача 04
# Делители-2
#
# На вход программе подается натуральное число n.
# Напишите программу, выводящую графическое изображение делимости чисел от 1 до n включительно.
# В каждой строке надо напечатать очередное число и столько символов «+», сколько делителей у этого числа.


n = int(input())
for num in range(1, n + 1):
    num_div = 0
    for k in range(1, num + 1):
        if num % k == 0:
            num_div += 1
    print(num, '+' * num_div, sep='')

# >>> 5
# 1+
# 2++
# 3++
# 4+++
# 5++

# Задача 05
# Цифровой корень
#
# На вход программе подается натуральное число n.
# Напишите программу, которая находит цифровой корень данного числа.
# Цифровой корень числа n получается следующим образом:
# если сложить все цифры этого числа, затем все цифры найденной суммы и повторить этот процесс,
# то в результате будет получено однозначное число (цифра),
# которое и называется цифровым корнем данного числа.
# Например:  1+9+2 = 12  --->  1+2 = 3
n = int(input())


def sum_num(num):
    sum_num = 0
    while num > 0:
        last_dig = num % 10
        sum_num += last_dig
        num = num // 10
    return sum_num


a = sum_num(n)
while a > 10:
    a = sum_num(a)
print(a)

# другое решение (1):
n = int(input())
while n > 9:
    count = 0
    while n != 0:
        digit = n % 10
        count += digit
        n //= 10
    n = count
print(n)

# другое решение (2):
n = int(input())
while n > 9:
    b = n % 10
    n //= 10
    n = n + b
print(n)

# другое решение (3):
n = int(input())
a = (n - 1) % 9 + 1
print(a)

# Задача 06
# Дано натуральное число n.
# Напишите программу, которая выводит значение суммы 1!+2!+3!+…+n!
#
# Примечание: Факториалом натурального числа n,
# называется произведение всех натуральных чисел от 1 до n,
# то есть:  n!=1⋅2⋅3⋅…⋅n

n = int(input())
sum_fact = 0

for i in range(1, n + 1):  # сумма факториалов
    factorial = 1
    for k in range(1, i + 1):  # вычисление факториала
        factorial *= k
    sum_fact += factorial
print(sum_fact)

# вариант без вложенного цикла
# текущий факториал для n! равен текущему n умноженое на предыдущий (n - 1)!
# n! = n * (n - 1)!

n = int(input())
sum_fact = 0
factorial = 1
for i in range(1, n + 1):
    factorial = factorial * i
    sum_fact += factorial
print(sum_fact)

# Задача 07
# Простые числа
# На вход программе подается два натуральных числа a и b (a< b).
# Напишите программу, которая находит все простые числа от a до b включительно.
# Примечание: Число 1 простым не является

a = int(input())
b = int(input())

for i in range(a, b + 1):
    simple = True
    for k in range(2, i):
        if i % k == 0:
            simple = False
    if simple and i != 1:
        print(i)

# Решение без флагов
a = int(input())
b = int(input())
for i in range(a, b + 1):
    count = 0
    for j in range(1, i + 1):
        if i % j == 0:
            count += 1
    if count == 2:
        print(i)
