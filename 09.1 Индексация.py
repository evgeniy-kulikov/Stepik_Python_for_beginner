""" 9.1 Индексация """

# Задача 02:
# Дополните приведенный код, используя индексатор, так чтобы он вывел символ запятой.
s = "In 2010, someone paid 10k Bitcoin for two pizzas."
print(s[7])

# Другие варианты 1
for el in range(0, len(s)):
    if s[el] == ',':
        print(s[el])

# Другие варианты 2
print(s[s.find(",")])

# Задача 03:
# На вход программе подается одна строка. Напишите программу, которая выводит элементы строки
# с индексами 0, 2, 4, ... в столбик.
s = input()
for el in s[::2]:
    print(el)
    
# Другие варианты 1
s = input()
for el in s:
    if s.index(el) % 2 == 0:
        print(el)
        
# Другие варианты 2
s = input()
for count_index, el in enumerate(s):
    if count_index % 2 == 0:
        print(el)


# Задача 04:
# На вход программе подается одна строка.
# Напишите программу, которая выводит в столбик элементы строки в обратном порядке.
s = input()
for el in s[::-1]:
    print(el)


# Задача 05:
# На вход программе подаются три строки: Имя, Фамилия и Отчество.
# Напишите программу, которая выводит инициалы (ФИО) человека.
a, b, c, = input(), input(), input()
print(b[0] + a[0] + c[0])

# Задача 06:
# На вход программе подается одна строка состоящая из цифр.
# Напишите программу, которая считает сумму цифр данной строки.
s = input()
sum_str = 0
for el in s:
    sum_str += int(el)
print(sum_str)

# Другие варианты 1
s = input()
sum_str = sum(int(el) for el in s)
print(sum_str)

# Задача 07:
# На вход программе подается одна строка. Напишите программу, которая выводит сообщение «Цифра»,
# если строка содержит цифру. В противном случае вывести сообщение «Цифр нет».

s = input()
flag = False
for el in s:
    if el.isdecimal():
        flag = True
        break
print('Цифра' if flag else 'Цифр нет')
# Последнюю строку можно заменить на:
print(('Цифр нет', 'Цифра')[flag])
# синтаксис тернарного оператора с кортежем (when_false, when_true)[condition]

# Задача 08:
# На вход программе подается одна строка. Напишите программу, которая определяет
# сколько раз в строке встречаются символы '+' и '*'
s = input()
plus = 0
star = 0
for el in s:
    if el == '+':
        plus += 1
    elif el == '*':
        star += 1
print(f'Символ + встречается {plus} раз')
print(f'Символ * встречается {star} раз')

# Другие варианты 1
s = input()
print(f'Символ + встречается {s.count("+")} раз')
print(f'Символ * встречается {s.count("*")} раз')

# Другие варианты 2
s = input()
for el in ['+', '*']:
    print(f'Символ {el} встречается {s.count(el)} раз')

# Задача 09:
# На вход программе подается одна строка.
# Напишите программу, которая определяет сколько в ней одинаковых соседних символов
s = input()
last_el = ''
count = 0
for el in s:
    if el == last_el:
        count += 1
    last_el = el
print(count)

# Другие варианты 1
# Недостаток: на каждой итерации нужно дважды пробегать по списку
s = input()
count = 0
for i in range(1, len(s)):
    count += s[i] == s[i - 1]
print(count)

# Задача 10:
# На вход программе подается одна строка с буквами русского языка.
# Напишите программу, которая определяет количество гласных и согласных букв.
s = input().lower()
cnt_vow = 0
cnt_cons = 0
vowels = 'ауоыиэяюёе'
consonants = 'бвгджзйклмнпрстфхцчшщ'
for el in s:
    if el in vowels:
        cnt_vow += 1
    elif el in consonants:
        cnt_cons += 1
print(f'Количество гласных букв равно {cnt_vow}')
print(f'Количество согласных букв равно {cnt_cons}')

# Другие варианты 1
# Смысл единицы в начале:
#  присваивается значение 1, если элемент соответствует условию. Единицы дальше в функции суммируются.
s = input()
s = s.lower()
vowels = sum(1 for el in s if el in 'ауоыиэяюёе')
consonants = sum(1 for el in s if el in 'бвгджзйклмнпрстфхцчшщ')
print(f'Количество гласных букв равно {vowels}')
print(f'Количество согласных букв равно {consonants}')


# Задача 11:
# На вход программе подается натуральное число, записанное в десятичной системе счисления.
# Напишите программу, которая переводит данное число в двоичную систему счисления
n = int(input())
b = ''
while n > 0:
    b = str(n % 2) + b
    n = n // 2
print(b)

# Другие варианты 1:
n = int(input())
n_2 = bin(n)[2:]  # функция bin() в начале пишет "b0"  -->  удаляем лишнее
print(n_2)
