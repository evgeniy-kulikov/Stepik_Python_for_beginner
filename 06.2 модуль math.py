# 06.2 Модуль math
# Этот модуль предоставляет обширный функционал для проведения вычислений с
# вещественными числами (числами с плавающей точкой)
# Для использования этих функций в начале программы необходимо подключить модуль,
# Это делается командой import
#
import math
# для вызова функции мы вынуждены указывать название модуля и символ точки
num1 = math.sqrt(2)     # вычисление корня квадратного из двух (1.4142135623730951)
num2 = math.ceil(3.8)   # округление числа вверх  (4)
num3 = math.floor(3.8)  # округление числа вниз   (3)
#
# from math import *
# При таком способе подключения, импортируются абсолютно все функции модуля math
# название модуля и символ точки при вызове функций не указываются
# num_1 = sqrt(2)
# num_2 = ceil(3.8)
# num_3 = floor(3.8)
#
# from math import sqrt, ceil
# Если нужно использовать только некоторые функции модуля
# num_01 = sqrt(2)
# num_02 = ceil(3.8)
# num_03 = floor(3.8)  # приведет к ошибке, так как функция floor не подключена
#
# Примечание 1.
# Все функции модуля math возвращают значение, которое можно вывести на экран,
# присвоить другой переменной или использовать в математическом выражении.
#
# Примечание 2.
# Для использования функций int(), float(), abs(), min(), max(), round()
# подключать модуль math нет необходимости. Это так называемые встроенные функции.
#
# Примечание 2.
# Вызов функций pow(x, n) можно заменить использованием оператора возведения в степень: x**n

# Задача 01:
# import math
# Найти гипотенузу прямоугольного треугольника
x1, y1, x2, y2 = float(input('')), float(input('')), float(input('')), float(input(''))
line = math.sqrt(math.pow((x1 - x2), 2) + math.pow((y1 - y2), 2))
print(line)

# Другое решение без math
x1, y1, x2, y2 = [float(input()) for i in range(0, 4)]
print(((x1 - x2) ** 2 + (y1 - y2) ** 2) ** 0.5)

# Задача 02:
# Найти площадь и длину окружности по заданному радиусу
# import math
r = float(input(''))
s = math.pi * math.pow(r, 2)
c = 2 * math.pi * r
print(s)
print(c)

# Задача 03:
# Средние значения
# На вход программе подается два вещественных числа a и b, каждое на отдельной строке
# Программа должна вывести 4 числа – среднее арифметическое, геометрическое, гармоническое и квадратичное
from math import sqrt, pow
a, b = float(input('')), float(input(''))
average = (a + b) / 2
geometric = sqrt(a * b)
harmonic = (2 * a * b) / (a + b)
square = sqrt((pow(a, 2) + pow(b, 2)) / 2)
print(average, geometric, harmonic, square, sep='\n')

# Задача 04:
# Тригонометрическое выражение
# На вход программе подается одно вещественное число xx измеряемое в градусах
# Программа должна вывести одно число – значение тригонометрического выражения
# Примечание 1. Тригонометрические функции принимают аргумент в радианах.
# Чтобы перевести градусы в радианы, воспользуйтесь формулой r = (x * pi) / 180
# Примечание 2. Модуль math содержит встроенную функцию radians(),
# которая переводит угол из градусов в угол в радианах.
from math import radians, pow, sin, cos, tan
a = float(input(''))
x = radians(a)
trigonometry = sin(x) + cos(x) + pow(tan(x), 2)
print(trigonometry)

# Задача 05:
# Напишите программу, вычисляющую значение потолка (ceil) и пола (floor)
# (... это методы округления вещественного числа) по заданному вещественному числу x.
from math import floor, ceil
n = float(input(''))
n_sum = floor(n) + ceil(n)
print(n_sum)

# Задача 06:
# Даны три вещественных числа a, b, c. Напишите программу, которая находит вещественные корни
# квадратного уравнения  ax^2 + bx + c = 0
# input: На вход программе подается три вещественных числа a!=0, b, c
# output: Программа должна вывести вещественные корни уравнения если они существуют
# или текст «Нет корней» в противном случае.
# метод решения тут:  http://fizmat.by/math/equation/quadratic
from math import pow, sqrt
a, b, c = float(input('')), float(input('')), float(input(''))
discriminant = pow(b, 2) - (4 * a * c)
if discriminant > 0:
    root_1 = (-b - sqrt(discriminant)) / (2 * a)
    root_2 = (-b + sqrt(discriminant)) / (2 * a)
    min_root = min(root_1, root_2)
    max_root = max(root_1, root_2)
    print(min_root, max_root, sep='\n')
elif discriminant == 0:
    root = -b / (2 * a)
    print(root)
else:
    print('Нет корней')

# Задача 07:
# Правильный многоугольник
# Правильный многоугольник — выпуклый многоугольник, у которого равны все стороны и все углы между смежными сторонами.
# Площадь правильного многоугольника с длиной стороны " a " и количеством сторон " n " вычисляется по формуле
# input: На вход программе подается два числа nn и aa, каждое на отдельной строке.
# output: Программа должна вывести вещественное число – площадь многоугольника.
from math import pow, tan, pi
n, a = int(input('')), float(input(''))
s = (n * pow(a, 2)) / (4 * tan(pi / n))
print(s)
